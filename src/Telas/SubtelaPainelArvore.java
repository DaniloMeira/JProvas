package Telas;

import ClassesTeste.ConectaBanco;
import ClassesTeste.CriarArvore;
import ClassesTeste.dao.DAOprova;
import ClassesTeste.dao.DAOquestao;
import ClassesTeste.utils.ValidadorTags;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;

/**
 *
 * @author Danilo Meira e Silva
 */
public class SubtelaPainelArvore extends javax.swing.JPanel {

public JProvas jprovas_telasbtPainelArvore;
public String tipoItem;
String codItem="0";
private String nomeItem;
JScrollPane scrollPane;
public CriarArvore instanciaClasseArvore;
public DAOquestao daoQuest_sbtParvore;
public DAOprova daoProva_sbtProva;
boolean minimizado=false;
TelaRenomearItem tRenomear;
SubtelaEditorProva sbtEP;
SubTelaEditorQuestao sbtEQ;
ConectaBanco conexao;
public static ValidadorTags validTag = new ValidadorTags();

short maxNumAbasAbertas =15; //Limite de abas que podem ser abertas no painel de edição
short numAbasAbertas=0; //Indicador do numero de abas já abertas

String [][]abasAbertas;// = new String [maxNumAbasAbertas][1];
JButton[] arrayBotoesFechar;
//não consegui uma maneira de resgatar em qual aba o botão está, para contornar este problema foi criado um array que armazena
//os botoes em uma posição igual ao índice da aba onde ele se encontra
JTabbedPane tAbas;
JComponent jp_logotipo;
JButton botaoFecharAbaX;
public SubTelaEditorQuestao sbtEditQuest;
public SubtelaEditorProva sbtEditorProva;

ActionListener eventoBotaoFecharAba; //evento chamado pelo botao para fechar a aba

Icon iconeFecharAba = new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/iconeFechar_18.png"));
//Icon iconeFecharAba = criarImagemIcone("/Imagens/IconesSistema/iconeFechar_18.png");
Icon iconeAbaProva = new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/iconeAbaProva.gif"));
Icon iconeAbaQuestao = new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/iconeAbaQuestao.gif"));
  

  public SubtelaPainelArvore() {
    jp_logotipo=new JPanel_logotipo();
    conexao=new ConectaBanco();
    daoQuest_sbtParvore= new DAOquestao(this,conexao);  
    daoProva_sbtProva= new DAOprova(this,conexao);
    instanciaClasseArvore = new CriarArvore();  
//instanciaClasseArvore.setSelectionRow(0);
    abasAbertas = new String [maxNumAbasAbertas][2];
    arrayBotoesFechar = new JButton [maxNumAbasAbertas];
    //solução de: http://www.dreamincode.net/forums/topic/181639-call-function-when-button-is-pressed/
    eventoBotaoFecharAba = new ActionListener() {
	@Override
	public void actionPerformed(ActionEvent e) {
          int i=0;
          JButton b=(JButton)e.getSource();
          while( i<maxNumAbasAbertas && arrayBotoesFechar[i]!=b){
           i++;
          }
          //System.out.println("O X está na ABA: "+i);
          excluirAba(i);
	}
    };
    
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btAdicionarCat = new javax.swing.JButton();
        btRemoveItem = new javax.swing.JButton();
        btRenomearItem = new javax.swing.JButton();
        btNovaProva = new javax.swing.JButton();
        btNovaQuestao = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Arvore = instanciaClasseArvore.TreeDemo(this);

        btAdicionarCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/nova_pasta_32.png"))); // NOI18N
        btAdicionarCat.setText("   NOVA PASTA             ");
        btAdicionarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarCatActionPerformed(evt);
            }
        });

        btRemoveItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/deletar_32.png"))); // NOI18N
        btRemoveItem.setText("    REMOVER ITEM         ");
        btRemoveItem.setEnabled(false);
        btRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveItemActionPerformed(evt);
            }
        });

        btRenomearItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/renomear_32.png"))); // NOI18N
        btRenomearItem.setText("RENOMEAR ITEM              ");
        btRenomearItem.setEnabled(false);
        btRenomearItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRenomearItemActionPerformed(evt);
            }
        });

        btNovaProva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/iconeProva_32.png"))); // NOI18N
        btNovaProva.setText("     NOVA PROVA              ");
        btNovaProva.setEnabled(false);
        btNovaProva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovaProvaActionPerformed(evt);
            }
        });

        btNovaQuestao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconesSistema/iconeNovaQuestao_32.png"))); // NOI18N
        btNovaQuestao.setText("NOVA QUESTÃO              ");
        btNovaQuestao.setEnabled(false);
        btNovaQuestao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovaQuestaoActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(Arvore);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btRemoveItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAdicionarCat, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(btRenomearItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNovaProva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNovaQuestao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAdicionarCat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btRenomearItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btNovaProva, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btNovaQuestao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void btAdicionarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarCatActionPerformed
    tRenomear = new TelaRenomearItem(null,true,this,"novaCategoria");
    
  }//GEN-LAST:event_btAdicionarCatActionPerformed

  private void btNovaQuestaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovaQuestaoActionPerformed
    //tRenomear = new TelaRenomearItem(this,"novaQuestao");
    tRenomear = new TelaRenomearItem(null,true,this,"novaQuestao");
  }//GEN-LAST:event_btNovaQuestaoActionPerformed

  //A arvore envia informação do nó selecionado para esta classe, que por sua vez trata esta informação 
  //separando em tipo de item(questao, prova, ou categoria) e o seu codigo de identificação na 
  //tabela do banco de dados, para posteriormente utilizar nos outros métodos desta classe (renomear, excluir, criar).
  public void trataTipoItem(String texto){

    if(texto.endsWith("»")){
    tipoItem="categoria"; 
    codItem=texto.substring(texto.lastIndexOf(">")+1, texto.lastIndexOf("»"));
    }
    else if(texto.endsWith("¤")) {
    tipoItem="questao";
    codItem=texto.substring(texto.lastIndexOf(">")+1, texto.lastIndexOf("¤"));
    nomeItem=texto.substring(texto.lastIndexOf("<html>")+6, texto.lastIndexOf("</html>"));
    }
    else if(texto.endsWith("¶")){
    tipoItem="prova";
    codItem=texto.substring(texto.lastIndexOf(">")+1, texto.lastIndexOf("¶"));  
    }
  //System.out.println("saida trataTipoItem: tipoitem="+tipoItem + " coditem=" + codItem);
  }
  
 //Ao apertar o botao RENOMEAR, é criada uma instancia da tela de renomear Itens 
  private void btRenomearItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRenomearItemActionPerformed
    //tRenomear = new TelaRenomearItem(this,"renomear");
    tRenomear = new TelaRenomearItem(null,true,this,"renomear");
  //  tRenomear.setVisible(true);
    btRenomearItem.setEnabled(false);
   
  }//GEN-LAST:event_btRenomearItemActionPerformed
 
  private void btRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveItemActionPerformed
    switch (tipoItem){
      case "questao":{
        //alterar status do cursor para modo de espera
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
        
        daoQuest_sbtParvore.deletarQuestao(codItem);
        verificaQuestaoAberta(codItem,nomeItem);   
        
        //retornar cursor ao estado normal
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        break;
      }
      
      case "prova":{
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        verificaProvaAberta(codItem);
        //daoProva_sbtProva.removerImagemBanco(codItem);
        daoProva_sbtProva.deletarProva(codItem);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        break;
      }
      case "categoria":{
        //verificar, Falta incluir a exibição de uma mensagem para o usuário dizendo que todos itens pertinentes a esta categoria serão perdidos
        //instanciaClasseArvore.deletaCategoria(instanciaClasseArvore.node);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        daoQuest_sbtParvore.deletarCategoria(codItem);
        btRemoveItem.setEnabled(false);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//      return;
      }
    }
    instanciaClasseArvore.deletaItem();
    btRemoveItem.setEnabled(false);
    btAdicionarCat.setEnabled(false);
    btRenomearItem.setEnabled(false);
    btNovaProva.setEnabled(false);
    btNovaQuestao.setEnabled(false);
  }//GEN-LAST:event_btRemoveItemActionPerformed

  
  public void verificaQuestaoAberta(String codigo, String nomeItem){
        
        //verifica se a questao deletada está sendo exibida na lista de alguma prova aberta e destaca para informar ao usuario
        for(int i=0;i<=numAbasAbertas;i++){
          if(abasAbertas[i][1]=="prova"){
            SubtelaEditorProva sbtE = (SubtelaEditorProva) tAbas.getComponentAt(i);
            String nuProva= sbtE.numeroProva;
            System.out.println("TENTANDO ENCONTRAR QUESTAO NA PROVA DA ABA: "+i);
            sbtE.destacaQuestaoDeletada(nomeItem,codigo,nuProva,i);
          }
        }
        //deletar a aba caso a questao esteja aberta
        for(int i=0;i<numAbasAbertas;i++){
            if(abasAbertas[i][0]!=null & abasAbertas[i][1]=="questao" && abasAbertas[i][0].compareTo(codigo)==0){
              SubTelaEditorQuestao sbtEQ = (SubTelaEditorQuestao) tAbas.getComponentAt(i);
          /*      if(sbtEQ.imagemQuestao!=null){
                System.out.println("CODIGOITEM: "+Integer.parseInt(codItem));
                System.out.println("IMAGEMQUESTAO: "+sbtEQ.imagemQuestao);
                daoQuest_sbtParvore.removerImagemBanco(Integer.parseInt(codItem), sbtEQ.imagemQuestao);
              }*/
              sbtEQ.btCancelar.setEnabled(false);
              excluirAba(i);
              break;
            }
        }
 
  }
  
 public void verificaProvaAberta(String codigo){
 
       //deletar a aba caso a prova esteja aberta
        for(int i=0;i<maxNumAbasAbertas;i++){
            if(abasAbertas[i][0]!=null && abasAbertas[i][1].compareTo("prova")==0 && abasAbertas[i][0].compareTo(codigo)==0){
              sbtEP = (SubtelaEditorProva) tAbas.getComponentAt(i);
             /* if(sbtEP.imagemProva!=sbtEP.nomeArquivoLogotipoPadrao){
                System.out.println("CODIGOITEM: "+Integer.parseInt(codItem));
                System.out.println("IMAGEMProva: "+sbtEP.imagemProva);
                
              }*/
              sbtEP.jbCancelar.setEnabled(false);
              excluirAba(i);
              break;
            }
        }

 } 
 
 public void renomeiaItemAberto(String nomeAnterior,String tipoItem,String codigo, String novoTitulo){
   String tipoItemDaAba; 
   for(int i=0;i<maxNumAbasAbertas;i++){
    if(abasAbertas[i][0]!=null){
      tipoItemDaAba=abasAbertas[i][1];
      if(tipoItemDaAba.compareTo("prova")==0){
        if(tipoItem.compareTo("prova")==0 && abasAbertas[i][0].compareTo(codigo)==0){
          sbtEP = (SubtelaEditorProva) tAbas.getComponentAt(i);
          sbtEP.labelTituloProva.setText(novoTitulo);
          return;
        }
        else if(tipoItem.compareTo("questao")==0){}
        sbtEP = (SubtelaEditorProva) tAbas.getComponentAt(i);
        sbtEP.renomeiaQuestaoDaLista(nomeAnterior,novoTitulo);
      }
      else if(tipoItem.compareTo("questao")==0 && abasAbertas[i][0].compareTo(codigo)==0){
        sbtEQ = (SubTelaEditorQuestao) tAbas.getComponentAt(i); 
        sbtEQ.LbTituloQuest.setText(novoTitulo);      
      }
    }
     
  }
 }
 
 
  
  
  
  
  private void btNovaProvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovaProvaActionPerformed
    //tRenomear = new TelaRenomearItem(this,"novaProva");
    tRenomear = new TelaRenomearItem(null,true,this,"novaProva");
    
   
  }//GEN-LAST:event_btNovaProvaActionPerformed

  //Metodo chamado pelo botao OK da tela de renomear Itens
  public void acionaRenomear(String novoNome){
    instanciaClasseArvore.renomeiaItem(tipoItem, codItem, novoNome);
    renomeiaItemAberto(nomeItem,tipoItem,codItem, novoNome);
  }
  
  public void acionaCriarNovaProva(String novoNomeItem){
    int numNovaProva= daoProva_sbtProva.consultaProximaNumeracaoProva();
    daoProva_sbtProva.novaProva(novoNomeItem, codItem);
    instanciaClasseArvore.adicionaItem("prova", numNovaProva, novoNomeItem);
  }
  
    public void acionaCriarNovaQuestao(String novoNomeItem){
     int numeroNovaQuestao= daoQuest_sbtParvore.consultaProximaNumeracaoQuestao();
     daoQuest_sbtParvore.novaQuestao(1, novoNomeItem, codItem);
     instanciaClasseArvore.adicionaItem("questao", numeroNovaQuestao, novoNomeItem);
  }
  
    public void acionaCriarNovaCategoria(String novoNomeItem){
     int numNovaCateg= daoQuest_sbtParvore.consultaProximaNumeracaoCategoria();
     daoQuest_sbtParvore.novaCategoria(novoNomeItem, codItem);
     instanciaClasseArvore.adicionaItem("categoria", numNovaCateg, novoNomeItem);
  }
    
    
    public void gerarAbaQuestao()throws IOException{
      if(numAbasAbertas<maxNumAbasAbertas){
        jprovas_telasbtPainelArvore.jlabInformativaRodape.setText(null);
        //instanciaClasseArvore.abrirTelaQuestao(codItem);
        daoQuest_sbtParvore.abrirTelaQuestao(codItem);
        JLabel jlabelDaAba = new JLabel("QUESTÃO "+codItem+" ",iconeAbaQuestao,JLabel.RIGHT);
        jlabelDaAba.setForeground(Color.blue);
        JButton botaoFecharAba = new JButton();
        botaoFecharAba.setIcon(iconeFecharAba);
        botaoFecharAba.setBorderPainted(true);
        botaoFecharAba.setContentAreaFilled(true);
        botaoFecharAba.addActionListener(eventoBotaoFecharAba);
        //solucão de: http://stackoverflow.com/questions/19787146/aligning-icon-to-the-left-in-jtabbedpane-in-nimbus-look-and-feel
        JPanel jpanelDaAba = new JPanel(new BorderLayout());
        jpanelDaAba.add(jlabelDaAba, BorderLayout.WEST);
        jpanelDaAba.add(botaoFecharAba, BorderLayout.EAST);
    
        //tAbas.getTabPlacement();
        tAbas.addTab("teste QUESTÂO",sbtEditQuest);
        tAbas.setTabComponentAt(numAbasAbertas, jpanelDaAba);
        tAbas.setSelectedIndex(numAbasAbertas);
        abasAbertas[numAbasAbertas][0]=codItem;
        abasAbertas[numAbasAbertas][1]=tipoItem;
        arrayBotoesFechar[numAbasAbertas]=botaoFecharAba;
        numAbasAbertas++;}
      
      else{JOptionPane.showMessageDialog(null,"Há muitas abas abertas no Painel,\n encerre ao menos "+
           "uma aba para \n poder editar este item." ,"Muitas Abas Abertas",0);}
    }
    
    public void gerarAbaProva() throws IOException{
      if(numAbasAbertas<maxNumAbasAbertas){
        //instanciaClasseArvore.abrirTelaProva(codItem);
        jprovas_telasbtPainelArvore.jlabInformativaRodape.setText(null);
        daoProva_sbtProva.abrirTelaProva(codItem);
        JLabel jlabelDaAba = new JLabel("PROVA "+codItem+" ",iconeAbaProva,JLabel.RIGHT);
        jlabelDaAba.setForeground(Color.red);
        JButton botaoFecharAba = new JButton();
        botaoFecharAba.setIcon(iconeFecharAba);
        botaoFecharAba.setBorderPainted(true);
        botaoFecharAba.setContentAreaFilled(true);
        botaoFecharAba.addActionListener(eventoBotaoFecharAba);
        JPanel jpanelDaAba = new JPanel(new BorderLayout());
        jpanelDaAba.add(jlabelDaAba, BorderLayout.WEST);
        jpanelDaAba.add(botaoFecharAba, BorderLayout.EAST);
        
        
        tAbas.add("teste PROVA", sbtEditorProva);
        tAbas.setTabComponentAt(numAbasAbertas, jpanelDaAba);
        tAbas.setSelectedIndex(numAbasAbertas);
        abasAbertas[numAbasAbertas][0]=codItem;
        abasAbertas[numAbasAbertas][1]=tipoItem;
        arrayBotoesFechar[numAbasAbertas]=botaoFecharAba;
        numAbasAbertas++;}
      
      else{JOptionPane.showMessageDialog(null,"Há muitas abas abertas no Painel,\n encerre ao menos "+
           "uma aba para \n poder editar este item." ,"Muitas Abas Abertas",0);}
    }
    
    //metódo para criar uma nova aba no painel de edição, 
    public void criarAba() throws IOException{
      switch (tipoItem){
        case("questao"):{
          //primeiro verifica se um item já está aberto, evitando assim a criação de uma aba duplicada
          for(int i=0;i<maxNumAbasAbertas;i++){
            //se o item já estiver em uma aba aberta, visualizar a sua aba:
            jprovas_telasbtPainelArvore.jlabInformativaRodape.setText(null);
            //System.out.println("conteudoArray:"+abasAbertas[i][0]+" codigo item: "+codItem+" ggggggg - numeroArrayAbas:"+i);
            if(abasAbertas[i][0]!=null && abasAbertas[i][1]=="questao" && abasAbertas[i][0].compareTo(codItem)==0){tAbas.setSelectedIndex(i);return;}
          }
          //retirar tela com o logotipo
          if(numAbasAbertas==0){tAbas.remove(0);}
          gerarAbaQuestao();
          break;
        }
        case("prova"):{
          for(int i=0;i<maxNumAbasAbertas;i++){
            //System.out.println("conteudoArray:"+abasAbertas[i][0]+" codigo item: "+codItem+" blblblb - numeroArrayAbas:"+i);
            if(abasAbertas[i][0]!=null && abasAbertas[i][1]=="prova" && abasAbertas[i][0].compareTo(codItem)==0){
              if(tAbas.getSelectedIndex()!=i){jprovas_telasbtPainelArvore.jlabInformativaRodape.setText(null);}
              tAbas.setSelectedIndex(i);
              return;}
          }
          //retirar tela com o logotipo
          if(numAbasAbertas==0){tAbas.remove(0);}
          gerarAbaProva();
        }
      }
    }
	
    
    //metodo pra excluir uma aba do painel de edições    
    public void excluirAba(int indiceDaAba){
       int i=indiceDaAba;
       //System.out.println("acertou o metodo excluirAba");
       if(numAbasAbertas==0){return;}
       
       //exibe mensagem de alerta caso o item da aba contenha alterações que não foram salvas
       if(abasAbertas[i][1].compareTo("prova")==0){
         SubtelaEditorProva XX = (SubtelaEditorProva)tAbas.getComponentAt(i);
         if(XX.jbCancelar.isEnabled()){
           int n = JOptionPane.showConfirmDialog(tAbas,"HÁ ALTERAÇÕES QUE NÃO FORAM SALVAS.\nDESEJA FECHAR A ABA SEM SALVAR?","Mensagem de Confirmação",JOptionPane.YES_NO_OPTION);
           if(n==1){return;}
         }
         XX.removerArqImagem();
       }
       
       if(abasAbertas[i][1].compareTo("questao")==0){
         SubTelaEditorQuestao YY = (SubTelaEditorQuestao)tAbas.getComponentAt(i);
         if(YY.btCancelar.isEnabled()){
           int n = JOptionPane.showConfirmDialog(tAbas,"HÁ ALTERAÇÕES QUE NÃO FORAM SALVAS.\nDESEJA FECHAR A ABA SEM SALVAR?","Mensagem de Confirmação",JOptionPane.YES_NO_OPTION);
            System.out.println("O NUMERO N DA RESPOSTA É :"+n);
           if(n==1){return;}
         }
         YY.removerArqImagem();
       }
       
       
       tAbas.remove(i);
       
       //imprimeArrayAbas();
      
       if(numAbasAbertas>=2){

        for(int y=maxNumAbasAbertas-1;i!=y;i++){
          //System.out.println("array"+i+"="+abasAbertas[i][0]+" /array"+(i+1)+"="+abasAbertas[i+1][0]);
          abasAbertas[i][0]=abasAbertas[i+1][0];
	  abasAbertas[i][1]=abasAbertas[i+1][1];
          arrayBotoesFechar[i]=arrayBotoesFechar[i+1];
         }
         abasAbertas[maxNumAbasAbertas-1][0]=null;//quando se move o array inteiro, a ultima posição sempre fica vazia.
         abasAbertas[maxNumAbasAbertas-1][1]=null;
         arrayBotoesFechar[maxNumAbasAbertas-1]=null;
         numAbasAbertas--;
         }
       
        else if(numAbasAbertas==1){
         //tAbas.remove(0);
         abasAbertas[0][0]=null;
         abasAbertas[0][1]=null;
         arrayBotoesFechar[0]=null;
         numAbasAbertas--;  
        }
        // System.out.println("ARRAY ALTERADO:");
        // imprimeArrayAbas();
        if(numAbasAbertas==0){tAbas.addTab("JPROVAS", jp_logotipo);}
    }
    
   public void fecharAbas(){
   //System.out.println("maxNumAbasAbertas: "+maxNumAbasAbertas); 
   int i =1;
   while(abasAbertas[0][1]!=null){
     excluirAba(0);
     i++;
     //System.out.println("fechando aba: "+i);
   }   
       
   } 
    
    
    public void imprimeArrayAbas(){
     for(int i=0; i<maxNumAbasAbertas;i++){
       System.out.println("array"+i+"[0]: "+abasAbertas[i][0]);
       System.out.println("array"+i+"[1]: "+abasAbertas[i][1]);
     }
   } 
    
    //criar o ícone das abas
    protected static ImageIcon criarImagemIcone(String path) {
      java.net.URL imgURL = SubtelaPainelArvore.class.getResource(path);
      if (imgURL != null) {
        return new ImageIcon(imgURL);
      }
      else {
            System.err.println("Couldn't find file: " + path);
            return null;
      }
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree Arvore;
    public javax.swing.JButton btAdicionarCat;
    public javax.swing.JButton btNovaProva;
    public javax.swing.JButton btNovaQuestao;
    public javax.swing.JButton btRemoveItem;
    public javax.swing.JButton btRenomearItem;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
